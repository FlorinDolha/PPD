// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20201230153532_Verificare")]
    partial class Verificare
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("DataAccess.Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("NrLocuri")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sala");
                });

            modelBuilder.Entity("DataAccess.Spectacol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<double>("Pret")
                        .HasColumnType("float");

                    b.Property<double>("Sold")
                        .HasColumnType("float");

                    b.Property<string>("Titlu")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("VerificareId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VerificareId");

                    b.ToTable("Spectacole");
                });

            modelBuilder.Entity("DataAccess.Vanzare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("NrBileteVandute")
                        .HasColumnType("int");

                    b.Property<int>("SpectacolId")
                        .HasColumnType("int");

                    b.Property<double>("Suma")
                        .HasColumnType("float");

                    b.Property<int?>("VerificareId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpectacolId");

                    b.HasIndex("VerificareId");

                    b.ToTable("Vanzari");
                });

            modelBuilder.Entity("DataAccess.VanzariLocuri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Loc")
                        .HasColumnType("int");

                    b.Property<int>("VanzareId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VanzareId");

                    b.ToTable("VanzariLocuri");
                });

            modelBuilder.Entity("DataAccess.Verificare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<double>("Sold")
                        .HasColumnType("float");

                    b.Property<double>("SpectacolId")
                        .HasColumnType("float");

                    b.Property<double>("VanzareId")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Verificari");
                });

            modelBuilder.Entity("DataAccess.Spectacol", b =>
                {
                    b.HasOne("DataAccess.Verificare", null)
                        .WithMany("Spectacole")
                        .HasForeignKey("VerificareId");
                });

            modelBuilder.Entity("DataAccess.Vanzare", b =>
                {
                    b.HasOne("DataAccess.Spectacol", "Spectacol")
                        .WithMany("Vanzari")
                        .HasForeignKey("SpectacolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Verificare", null)
                        .WithMany("Vanzari")
                        .HasForeignKey("VerificareId");

                    b.Navigation("Spectacol");
                });

            modelBuilder.Entity("DataAccess.VanzariLocuri", b =>
                {
                    b.HasOne("DataAccess.Vanzare", "Vanzare")
                        .WithMany("ListaLocuriVandute")
                        .HasForeignKey("VanzareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vanzare");
                });

            modelBuilder.Entity("DataAccess.Spectacol", b =>
                {
                    b.Navigation("Vanzari");
                });

            modelBuilder.Entity("DataAccess.Vanzare", b =>
                {
                    b.Navigation("ListaLocuriVandute");
                });

            modelBuilder.Entity("DataAccess.Verificare", b =>
                {
                    b.Navigation("Spectacole");

                    b.Navigation("Vanzari");
                });
#pragma warning restore 612, 618
        }
    }
}
